@model AllProductsViewModel

<div class="text-center row gap-2">
    @if (Model.Products.Count() == 0)
    {
        <h2 class="mt-3">No Matches!</h2>
        <hr style="height:4px;color:aquamarine" />
    }
    @foreach (var product in Model.Products)
    {
        <div class="card border-2" style="width: 18rem; margin-top: 25px; margin-left: 15px;border-color:aquamarine;">
            <form asp-action="ViewProduct" asp-controller="Product" method="get">
                <button name="productName" value="@product.Name" class="btn">
                    <img class="card-img-top" style="width: 100%; height:18rem; margin-top:15px;object-fit:contain; display: flex; gap: 2rem" src="@product.ImageUrl" alt="Card image cap">
                </button>
            </form>
            <hr style="color: aquamarine; height:2px">
            <div class="card-body" style="">
                <center><font size="+1"><p class="card-text mb-3">@product.Name</p></font></center>
                @if (!product.isAvailable)
                {
                    <center><font size="+1"><p class="card-text mb-1" style="color: red">Unavailable!</p></font></center>

                }
                <center><font><p class="card-text mb-3">@product.Price $</p></font></center>
            </div>
            @if (User.IsInRole("Administrator"))
            {
                <form asp-action="Edit" asp-controller="Product" method="get">
                    <button name="productName" value="@product.Name" class="btn-dark mb-3">
                        Edit
                    </button>
                </form>
            }
        </div>

    }
    @* @{
    var parmsPrevious = new Dictionary<string, string>
    {
    {"categoryName",@Model.Products.Select(p=>p.CategoryName).First()},
    {"currentPage",(Model.CurrentPage-1).ToString()}
    };
    var parmsNext = new Dictionary<string, string>
    {
    {"categoryName",@Model.Products.Select(p=>p.CategoryName).First()},
    {"currentPage",(Model.CurrentPage+1).ToString()}
    };
    }*@
    @{
        string categoryName = Model.Products.Select(p => p.CategoryName).FirstOrDefault();
        string searchQuery = Model.SearchQuery;
    }
</div>
<div class="row">
    <div class="col">
        <div class="mx-auto mt-5">
            @if(string.IsNullOrEmpty(categoryName))
            {
                @for (int i = 1; i <= Model.NumberOfPages; i++)
                {
                    <a type="button" class="btn btn-square-md btn-outline-light border-2" style="color:aquamarine;font-size:30px;border-color:aquamarine;margin-left:0.5rem" asp-controller="Product" asp-action="All" asp-route-searchQuery="@searchQuery" asp-route-currentPage="@i">@i</a>
                }
            }
            else
            {
                @for (int i = 1; i <= Model.NumberOfPages; i++)
                {
                    <a type="button" class="btn btn-square-md btn-outline-light border-2" style="color:aquamarine;font-size:30px;border-color:aquamarine;margin-left:0.5rem" asp-controller="Product" asp-action="All" asp-route-categoryName="@(categoryName)" asp-route-currentPage="@i">@i</a>
                }
            }
        </div>

</div>
    @*<div class="col-md-6">
    <a asp-controller="Product" asp-action="All" asp-all-route-data="parmsPrevious">Previous</a>
    </div>*@
    @*<div class="col-md-6">
    <a asp-controller="Product" asp-action="All" name="categoryName" asp-route-categoryName="@(categoryName)" asp-route-currentPage="@(Model.CurrentPage-1)">Previous</a>
    </div>
    @*<div class="col-md-6">
    <a asp-controller="Product" asp-action="All" asp-all-route-data="parmsNext">Next</a>
    </div>*@
    @*
    <div class="col-md-6">
    <a asp-controller="Product" asp-action="All" name="categoryName" asp-route-categoryName="@(categoryName)" asp-route-currentPage="@(Model.CurrentPage+1)">Next</a>
    </div>*@
</div>
